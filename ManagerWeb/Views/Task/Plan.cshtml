<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <script src="~/Scripts/echarts.min.js"></script>
</head>
<body>
    <div id="main" style="width: 1500px;height:600px; position:absolute;top:70px"></div>
    <script type="text/javascript">
        var myChart = echarts.init(document.getElementById('main')); 
     
        //指定图表的配置项和数据
        var titles = ['.Net', 'ImageProcess', 'Plan'];
        var builderJson = @Html.Raw(ViewData["builderjson"].ToString());        
        

        var option = {
                        //分别设置标题居中主要代码
            title:[
                {
                    text:titles[0],
                    left:'25%',
                    top:'1%',
                    textAlign:'center'
                },
                {
                    text:titles[1],
                    left:'73%',
                    top:'1%',
                    textAlign:'center'
                },
                {
                    text:titles[2],
                    left:'25%',
                    top:'50%',
                    textAlign:'center'
                }
        
            ],
            grid:[
                {x:'7%',y:'7%',width:'38%',height:'38%'},
                {x2:'7%',y:'7%',width:'38%',height:'38%'},
                {x:'7%',y2:'7%',width:'85%',height:'38%'}
            ],

            xAxis: [{
                type: 'value',
                max: builderJson.all,
                splitLine: {
                    show: false
                }
            }, {
                type: 'value',
                max: builderJson.all,
                gridIndex: 1,
                splitLine: {
                    show: false
                },
            },{
                type: 'value',
                max: builderJson.all,
                gridIndex: 2,
                splitLine: {
                    show: false
                },
            }],
            yAxis: [{
                type: 'category',
                gridIndex: 0,
                data: Object.keys(builderJson.donet),
                axisLabel: {
                    interval: 0,
                    rotate: 30
                },
                splitLine: {
                    show: false
                }
            }, {
                gridIndex: 1,
                type: 'category',
                data: Object.keys(builderJson.imageprocess),
                axisLabel: {
                    interval: 0,
                    rotate: 30
                },
                splitLine: {
                    show: false
                }
            },{
                gridIndex: 2,
                type: 'category',
                data: Object.keys(builderJson.plan),
                axisLabel: {
                    interval: 0,
                    rotate: 30
                },
                splitLine: {
                    show: false
                }
            }],
            series: [{
                type: 'bar',
                stack: 'donet',
                z: 3,
                label: {
                    normal: {
                        position: 'right',
                        show: true
                    }
                },
                data: Object.keys(builderJson.donet).map(function (key) {
                    return builderJson.donet[key];
                })
            }, {
                type: 'bar',
                stack: 'donet',
                silent: true,
                itemStyle: {
                    normal: {
                        color: '#eee'
                    }
                },
                data: Object.keys(builderJson.donet).map(function (key) {
                    return builderJson.all - builderJson.donet[key];
                })
            }, {
                type: 'bar',
                stack: 'imageprocess',
                xAxisIndex: 1,
                yAxisIndex: 1,
                z: 3,
                label: {
                    normal: {
                        position: 'right',
                        show: true
                    }
                },
                data: Object.keys(builderJson.imageprocess).map(function (key) {
                    return builderJson.imageprocess[key];
                })
            }, {
                type: 'bar',
                stack: 'imageprocess',
                silent: true,
                xAxisIndex: 1,
                yAxisIndex: 1,
                itemStyle: {
                    normal: {
                        color: '#eee'
                    }
                },
                data: Object.keys(builderJson.imageprocess).map(function (key) {
                    return builderJson.all - builderJson.imageprocess[key];
                })
            },{
                type: 'bar',
                stack: 'plan',
                xAxisIndex: 2,
                yAxisIndex: 2,
                z: 3,
                label: {
                    normal: {
                        position: 'right',
                        show: true
                    }
                },
                data: Object.keys(builderJson.plan).map(function (key) {
                    return builderJson.plan[key];
                })
            }, {
                type: 'bar',
                stack: 'plan',
                silent: true,
                xAxisIndex: 2,
                yAxisIndex: 2,
                itemStyle: {
                    normal: {
                        color: '#eee'
                    }
                },
                data: Object.keys(builderJson.plan).map(function (key) {
                    return builderJson.all - builderJson.plan[key];
                })
            }]
        };
        //显示图表
        myChart.setOption(option);
    </script>
    @*<table>
            <thead>
                <tr><td>Sunday</td><td>Monday</td><td>Tuesday</td><td>Wednesday</td><td>Thursday</td><td>Friday</td><td>Saturday</td></tr>
            </thead>
            <tbody>

            </tbody>
        </table>*@
</body>
</html>